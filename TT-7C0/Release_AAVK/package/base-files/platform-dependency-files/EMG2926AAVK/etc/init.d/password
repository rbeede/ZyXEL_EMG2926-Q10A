#!/bin/sh /etc/rc.common
# Copyright (C) 2008-2010 OpenWrt.org

. /etc/functions.sh

START=11

boot() {
	##Trigger at samba initial process.
	exit 0
}

get_fwpwd() {
	sn=$(fw_printenv serialnum | awk -F"=" '{print  $2}')
	password=$(/usr/sbin/autogenpassword $sn SHA256)
	printf $password
}

start() {
	##check ucitrack type:system option:init ,led-->password
	
	sys_track=`/sbin/uci get ucitrack.@system[0].init`
	
	[ $sys_track=="led" ]&&{
		/sbin/uci set ucitrack.@system[0].init="password"
		/sbin/uci commit ucitrack
	}

	if [ -f /etc/passwd+ ]; then
		rm /etc/passwd+
	fi

	if [ -f /etc/shadow+ ]; then
		rm /etc/shadow+
	fi
	
	##For Console Debug
#	local ckDebugAccount=$(cat /etc/passwd|grep supervisor)
#	[ -z "$ckDebugAccount" ] && echo "supervisor::0:0:supervisor:/:/bin/ash" >> /etc/passwd
#	(echo supervisor; sleep 1; echo supervisor) | passwd supervisor

	##Max 5 account
	for i in 0 1 2 3 4
	do
		local username=$(uci get account.@account[$i].username)
		local password=$(uci get account.@account[$i].password)
		local privilege=$(uci get account.@account[$i].privilege)
		[ -z "$username" ] && continue
		
		##check account
		local curAccount=$(cat /etc/passwd |grep $username: |awk -F":" '{print $1}' )		
		if [ -z "$curAccount" -a "$curAccount" != "$username" ];then
			##Add username
			if [ "$privilege" == "1" ]; then
				echo "$username::0:0:$username:/:/bin/ash" >> /etc/passwd
			else
				echo "$username::0:0:$username:/:/bin/fail" >> /etc/passwd
			fi		
		fi

		##Set password
		(echo $password; sleep 1; echo $password) | passwd $username

	done

	#protect login root id
#	chk_password=$(cat /etc/passwd |grep root:)
#        [ -z "$chk_password" ] && {
#                echo "root::0:0:root:/:/bin/ash" >> /etc/passwd
#        }

#	config_load system
#	config_get password main pwd
#	(echo $password; sleep 1; echo $password) | passwd 

	if [ -f /etc/passwd+ ]; then
		rm /etc/passwd+
	fi
}

stop() {
	local remote_https_WAN=$(uci get firewall.remote_https_WAN.client_check)
	local remote_http_WAN=$(uci get firewall.remote_WWW_WAN.client_check)
	local remote_ssh_WAN=$(uci get firewall.remote_ssh_WAN.client_check)
	local remote_telnet_WAN=$(uci get firewall.remote_telnet_WAN.client_check)
	##Max 5 account
	for i in 0 1 2 3 4
	do
		local username=$(uci get account.@account[$i].username)
		local password=$(uci get account.@account[$i].password)
		local oldName=$(uci get account.@account[$i].oldname)
		local privilege=$(uci get account.@account[$i].privilege)
		local default_account=$(uci get account.@account[$i].default)
		##when enable wan remote,supervisor password will auto gen key
		if [ "$privilege" == "1" -a "$default_account" == "1" ]; then
			if [ "$remote_https_WAN" != "1" -o "$remote_http_WAN" != "1" -o \
				"$remote_ssh_WAN" != "1" -o "$remote_telnet_WAN" != "1" ]; then 
				if [ "$password" == "supervisor" ]; then
					deluser "$username"
					password=$(get_fwpwd)
					macaddr_suf5nums=$(echo $(printf '%x' $((0x$(fw_printenv ethaddr | awk -F"=" '{print $2}' | sed 's/://g')+2))) | grep -o .....$ | awk '{print toupper($0)}')
					uci set account.@account[$i].password=$password$macaddr_suf5nums
					uci commit
				fi
			fi
		fi
		
		[ -z "$oldName" ] && continue
		
		deluser "$oldName"
	done
	
	local remove_account=$(uci get account.general.remove_account)
		[ -n "$remove_account" ] && {
			deluser "$remove_account"
			uci del account.general.remove_account
			uci commit account
		}

}
