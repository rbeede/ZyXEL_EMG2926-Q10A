#!/bin/sh
# Copyright (C) 2006 OpenWrt.org

sleep 2
. /etc/functions.sh
include /lib/network

config_load network
defaultWan=$(uci get network.general.defaultWan)
config_get proto $defaultWan proto

sys_dns1=""
sys_dns2=""
sys_dns3=""

rm /tmp/ISP_DNS

if [ $proto != "static" ]; then

	if [ "$defaultWan" == "wan" ]  ; then
		cp /tmp/wan_dns /tmp/ISP_DNS
	elif [ "$defaultWan" == "wan1" ]  ; then
		cp /tmp/wan1_dns /tmp/ISP_DNS
	elif [ "$defaultWan" == "wan2" ]  ; then
		cp /tmp/wan2_dns /tmp/ISP_DNS
	elif [ "$defaultWan" == "wan3" ]  ; then
		cp /tmp/wan3_dns /tmp/ISP_DNS
	elif [ "$defaultWan" == "wan4" ]  ; then
		cp /tmp/wan4_dns /tmp/ISP_DNS
	fi
	
	## read dns server from /tmp/ISP_DNS, which are obtained from ISP
	count=1
	while read line
	do
		express=$(echo $line | grep "nameserver")
		#echo "$line"
		if [ "$express" != "" ]; then
			if [ "$count" == "1" ]; then
				sys_dns1=$(echo $express | awk -F" " '{print $2}')
			fi
			
			if [ "$count" == "2" ]; then
				sys_dns2=$(echo $express | awk -F" " '{print $2}')
			fi
			
			if [ "$count" == "3" ]; then
				sys_dns3=$(echo $express | awk -F" " '{print $2}')
			fi
			count=$(($count+1))
		fi

	done < /tmp/ISP_DNS
fi

## Get DNSv6 from dnsmasq conf file.
config_get v6_proto $defaultWan v6_proto

sys_dnsv6_1=""
sys_dnsv6_2=""
sys_dnsv6_3=""

if [ $v6_proto != "static" ]; then

	## read dns server from /tmp/resolv.conf.auto, which are obtained from ISP
	v6count=1
	while read line
	do
		v6express=$(echo $line | grep "nameserver")
		#echo "$line"
		if [ "$v6express" != "" ]; then
			if [ "$v6count" == "1" ]; then
				sys_dnsv6_1=$(echo $v6express | awk -F" " '{print $2}')
			fi
			
			if [ "$v6count" == "2" ]; then
				sys_dnsv6_2=$(echo $v6express | awk -F" " '{print $2}')
			fi
			
			if [ "$v6count" == "3" ]; then
				sys_dnsv6_3=$(echo $v6express | awk -F" " '{print $2}')
			fi
		fi
		v6count=$(($v6count+1))
	done < /tmp/ISP_DNS
fi


## remove old /tmp/resolv.conf.auto and lock dns check
rm /tmp/resolv.conf.auto

touch /tmp/resolv.conf.auto
echo "1" > /var/update_dns_lock

## read user config of DNS server
usr_dns1=""
usr_dns2=""
usr_dns3=""

config_get dns1 $defaultWan dns1
usr_dns1=${dns1#*,}
dns_type1=${dns1%%,*}
config_get dns2 $defaultWan dns2
usr_dns2=${dns2#*,}
dns_type2=${dns2%%,*}
config_get dns3 $defaultWan dns3
usr_dns3=${dns3#*,}
dns_type3=${dns3%%,*}
 
## reload /tmp/resolv.conf.auto

rm /tmp/"$defaultWan"_dns_z

i=1
for dns_type in $dns_type1 $dns_type2 $dns_type3
do

	if [ "$dns_type" == "ISP" ]; then
		if [ "$sys_dns1" != "" ]; then
			echo "nameserver $sys_dns1" >> /tmp/resolv.conf.auto
			echo $sys_dns1  >> /tmp/"$defaultWan"_dns_z
			sys_dns1=""
		elif [ "$sys_dns2" != "" ]; then
			echo "nameserver $sys_dns2" >> /tmp/resolv.conf.auto
			echo $sys_dns2  >> /tmp/"$defaultWan"_dns_z
			sys_dns2=""
		elif [ "$sys_dns3" != "" ]; then
			echo "nameserver $sys_dns3" >> /tmp/resolv.conf.auto
			echo $sys_dns3  >> /tmp/"$defaultWan"_dns_z
			sys_dns3=""
		else
			echo "no more available dns servers !"
		fi
	elif [ "$dns_type" == "USER" ]; then
		if [ "$i" == "1" ]; then
			if [ "$usr_dns1" != "" ]; then
				echo "nameserver $usr_dns1" >> /tmp/resolv.conf.auto
				echo $usr_dns1  >> /tmp/"$defaultWan"_dns_z
			fi
		elif [ "$i" == "2" ]; then
			if [ "$usr_dns2" != "" ]; then
				echo "nameserver $usr_dns2" >> /tmp/resolv.conf.auto
				echo $usr_dns2  >> /tmp/"$defaultWan"_dns_z
			fi
		else
			if [ "$usr_dns3" != "" ]; then
				echo "nameserver $usr_dns3" >> /tmp/resolv.conf.auto
				echo $usr_dns3  >> /tmp/"$defaultWan"_dns_z
			fi
		fi
	else
		echo "dns type is NONE, don't do anything"
	fi
	
	i=$(($i+1))
done


## Get DNSv6 from UCI conf file, then set USER/ISP DNSv6 into dnsmasq conf file.
usr_dnsv6_1=""
usr_dnsv6_2=""
usr_dnsv6_3=""
 
config_get dnsv6_1 $defaultWan dnsv6_1
usr_dnsv6_1=${dnsv6_1#*,}
dnsv6_type1=${dnsv6_1%%,*}
config_get dnsv6_2 $defaultWan dnsv6_2
usr_dnsv6_2=${dnsv6_2#*,}
dnsv6_type2=${dnsv6_2%%,*}
config_get dnsv6_3 $defaultWan dnsv6_3
usr_dnsv6_3=${dnsv6_3#*,}
dnsv6_type3=${dnsv6_3%%,*}

j=1
for dnsv6_type in $dnsv6_type1 $dnsv6_type2 $dnsv6_type3
do
	#if [ "$dnsv6_type" == "ISP" ]; then
	#	if [ "$sys_dnsv6_1" != "" ]; then
	#		echo "nameserver $sys_dnsv6_1" >> /tmp/resolv.conf.auto
	#		sys_dnsv6_1=""
	#	elif [ "$sys_dnsv6_2" != "" ]; then
	#		echo "nameserver $sys_dnsv6_2" >> /tmp/resolv.conf.auto
	#		sys_dnsv6_2=""
	#	elif [ "$sys_dnsv6_3" != "" ]; then
	#		echo "nameserver $sys_dnsv6_3" >> /tmp/resolv.conf.auto
	#		sys_dnsv6_3=""
	#	else
	#		echo "no more available dns servers !"
	#	fi
	if [ "$dnsv6_type" == "USER" ]; then
		if [ "$j" == "1" ]; then
			if [ "$usr_dnsv6_1" != "" ]; then
				echo "nameserver $usr_dnsv6_1" >> /tmp/resolv.conf.auto
			fi
		elif [ "$j" == "2" ]; then
			if [ "$usr_dnsv6_2" != "" ]; then
				echo "nameserver $usr_dnsv6_2" >> /tmp/resolv.conf.auto
			fi
		else
			if [ "$usr_dnsv6_3" != "" ]; then
				echo "nameserver $usr_dnsv6_3" >> /tmp/resolv.conf.auto
			fi
		fi
	else
		echo "dns type is NONE, don't do anything"
	fi
	
	j=$(($j+1))
done


chmod 755 /tmp/resolv.conf.auto

## update (unlock) success notification
echo "0" > /var/update_dns_lock


for iface in "" 1 2 3 4 
do
	wan_enabled=$(uci get network.wan$iface.enable)
	default_iface=$(uci get network.wan$iface.default)
	local proto=$(uci get network.wan$iface.proto)
	local default_int=""
	local d_gw=""

	if [ "$wan_enabled" == "0" ] || [ "$defaultWan" == "wan$iface" ] ;then
		continue
	fi

	if [ "$proto" == "static" ]; then
		d_gw=$(uci get network.wan$iface.gateway)
	else
		d_gw=$(uci get network.wan$iface.isp_gw)
	fi

	if [ "$proto" == "pppoe" ] || [ "$proto" == "pptp" ];then
	
		default_int=$proto-wan$iface
		rm /tmp/wan_route3
		d_gw=""
		route -n | grep  $default_int | grep 255.255  > /tmp/wan_route3
		exec < /tmp/wan_route3
		while read line
		do
			local test=$(echo $line | awk '{print $8}' )	
			local test2=$(echo $line | awk '{print $4}' )
			if [ "$test" == "$default_int" ] && [ "$test2" != "UG" ] ;then
				d_gw=$(echo $line | awk '{print $1}' | tr -d '\n')
				break
			fi		
		done

		if [ "$d_gw" == "" ] ;then
			d_gw="0.0.0.0"
		fi		
	else
		default_int=$(uci get network.wan$iface.ifname)	
	fi

	count=1

	dns_file=/tmp/wan"$iface"_dns
	
	while read line
	do
		express=$(echo $line | grep "nameserver")
		#echo "$line"
		if [ "$express" != "" ]; then
			if [ "$count" == "1" ]; then
				sys_dns1=$(echo $express | awk -F" " '{print $2}')
			fi
			
			if [ "$count" == "2" ]; then
				sys_dns2=$(echo $express | awk -F" " '{print $2}')
			fi
			
			if [ "$count" == "3" ]; then
				sys_dns3=$(echo $express | awk -F" " '{print $2}')
			fi
			count=$(($count+1))
		fi
	done < $dns_file

	
	## read user config of DNS server
	usr_dns1=""
	usr_dns2=""
	usr_dns3=""

	config_get dns1 wan$iface dns1
	usr_dns1=${dns1#*,}
	dns_type1=${dns1%%,*}
	config_get dns2 wan$iface dns2
	usr_dns2=${dns2#*,}
	dns_type2=${dns2%%,*}
	config_get dns3 wan$iface dns3
	usr_dns3=${dns3#*,}
	dns_type3=${dns3%%,*}
	
	## reload /tmp/resolv.conf.auto
	
	rm /tmp/wan"$iface"_dns_z

	i=1
	for dns_type in $dns_type1 $dns_type2 $dns_type3
	do
		if [ "$d_gw" == "0.0.0.0" ] ;then
			continue
		fi

		if [ "$dns_type" == "ISP" ]; then
			if [ "$sys_dns1" != "" ]; then
				route add -net $sys_dns1 netmask 255.255.255.255 gw $d_gw
				echo $sys_dns1  >> /tmp/wan"$iface"_dns_z
				sys_dns1=""
			elif [ "$sys_dns2" != "" ]; then
				route add -net $sys_dns2 netmask 255.255.255.255 gw $d_gw
				echo $sys_dns2  >> /tmp/wan"$iface"_dns_z
				sys_dns2=""
			elif [ "$sys_dns3" != "" ]; then
				route add -net $sys_dns3 netmask 255.255.255.255 gw $d_gw
				echo $sys_dns3  >> /tmp/wan"$iface"_dns_z
				sys_dns3=""
			else
				echo "no more available dns servers !"
			fi
			
			
		elif [ "$dns_type" == "USER" ]; then
			if [ "$i" == "1" ]; then
				if [ "$usr_dns1" != "" ]; then
					route add -net $usr_dns1 netmask 255.255.255.255 gw $d_gw
					echo $usr_dns1  >> /tmp/wan"$iface"_dns_z
				fi
			elif [ "$i" == "2" ]; then
				if [ "$usr_dns2" != "" ]; then
					route add -net $usr_dns2 netmask 255.255.255.255 gw $d_gw
					echo $usr_dns2  >> /tmp/wan"$iface"_dns_z
				fi
			else
				if [ "$usr_dns3" != "" ]; then
					route add -net $usr_dns3 netmask 255.255.255.255 gw $d_gw
					echo $usr_dns3  >> /tmp/wan"$iface"_dns_z
				fi
			fi
		else
			echo "dns type is NONE, don't do anything"
		fi
		
		i=$(($i+1))
	done
	
done
