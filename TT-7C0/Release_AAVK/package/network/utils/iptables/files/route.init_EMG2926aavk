#!/bin/sh /etc/rc.common
# Copyright (C) 2006 OpenWrt.org

START=90

##check mode,if AP/UR,exit
local sys_mode=$(get_sys_mode)
[ "$sys_mode" == "2" -o "$sys_mode" == "3" ] && exit 0

print_log()
{
	echo "========= print log ==========>  $1 " 1> /dev/null
}

wan_iface2=""

check_interface()
{
	wan_iface2=""
	for ii in "" 1 2 3 4
	do
		if_enable=$(uci get network.wan$ii.enable)
		if_ifname=$(uci get network.wan$ii.ifname)
		if_proto=$(uci get network.wan$ii.proto)
		if [ "$if_enable" == "1" ] && [ "$if_ifname" == "$1" ];then
			if [ "$if_proto" == "pppoe" ] ;then
				wan_iface2=pppoe-wan$ii
			else
				wan_iface2=$1
			fi
		else
			continue
		fi
	done
}

set_classless_routes() {
	local max=128
	local type
	local interface=$(uci get network.$INTERFACE.ifname)
	#echo "[set_classless_routes] $1,  $2,  $INTERFACE" >> /tmp/121
	while [ -n "$1" -a -n "$2" -a $max -gt 0 ]; do
		[ ${1##*/} -eq 32 ] && type=host || type=net
		echo "udhcpc: adding route for $type $1 via $2  dev $interface" >> /tmp/121
		#route del -$type "$1" gw "$2" dev "$3"
		#route add -$type "$1" gw "$2" dev "$3"
		route del -$type "$1" gw "$2" dev $interface
		route add -$type "$1" gw "$2" dev $interface
		ip route del "$1" via "$2" table 1
		ip route add "$1" via "$2" table 1
		
		max=$(($max-1))
		shift 2
	done
	#echo "===== set_classless_routes =====" >> /tmp/121
}


boot() {
	config_load route
	count=`uci get route.general.routes_count`
	gw_enable=$(uci get route.route1.gateway_enable)
	i=1
	while [ $i -le $count ]
	do
		print_log "==== boot  i =$i  "
		enable=`uci get route.route$i.enable`
		dst=`uci get route.route$i.dest_ip`
		mask=`uci get route.route$i.netmask`
		gateway=`uci get route.route$i.gateway`
		gateway_enable=`uci get route.route$i.gateway_enable`
		wan_iface=`uci get route.route$i.wan_iface`
		check_interface $wan_iface
		wan_iface=$wan_iface2
		mask_num=$(/bin/ipcalc.sh $dst $mask | grep PREFIX | sed 's/PREFIX=//g' | tr -d '\n' )
		
		[[ -z "$gw_enable" ]] && {
			uci set route.route$i.gateway_enable=1
		}
		
		if [ "$enable" = "1" ] ; then
			if [ "$gateway_enable" = "1" ] ; then
				
				if [ "$wan_iface" != "" ] ; then
					uci set route.route$i.wan_iface=''
				fi
				
				#if [ "$wan_iface" != "" ] ; then
				#	route add -net $dst netmask $mask gw $gateway dev $wan_iface
				#	print_log "1 route add -net $dst netmask $mask gw $gateway dev $wan_iface"

				#	ip route add $dst/$mask_num via $gateway dev $wan_iface table 1
				#	print_log "1 ip route add $dst/$mask_num via $gateway dev $wan_iface table 1"
				#else
					route add -net $dst netmask $mask gw $gateway
					print_log "2 route add -net $dst netmask $mask gw $gateway" 

					ip route add $dst/$mask_num via $gateway table 1
					print_log "2 ip route add $dst/$mask_num via $gateway table 1"
				#fi
			
			else
				route add -net $dst netmask $mask dev $wan_iface
				 print_log "3 route add -net $dst netmask $mask dev $wan_iface" 


				ip route add $dst/$mask_num dev $wan_iface table 1
				print_log "3 ip route add $dst/$mask_num dev $wan_iface table 1"
			fi
		fi
		i=`expr $i + 1`
	done
	
	uci commit route
	
	local static_routes=$(uci get network.wan$i.staticroutes)
	local msstatic_routes=$(uci get network.wan$i.msstaticroutes)

	for i in "" 1 2 3 4
	do

		local interface=$(uci get network.wan$i.ifname)
		local static_routes=$(uci get network.wan$i.staticroutes)
		#echo "[route] static_routes: $static_routes" >> /tmp/121		

		[ -n "$static_routes" ] && {
			#echo "[route] static_routes: $static_routes" >> /tmp/121
			#uci del network.wan$i.staticroutes
			set_classless_routes $static_routes
		}

		local msstatic_routes=$(uci get network.wan$i.msstaticroutes)

		[ -n "$msstatic_routes" ] && {
			#uci del network.wan$i.msstaticroutes
			set_classless_routes "$msstatic_routes"
		}

	done
}

start() {
	count=`uci get route.general.routes_count`
	i=1
	while [ $i -le $count ]
	do
		print_log "==== start  i =$i  "
		new=`uci get route.route$i.new`
		edit=`uci get route.route$i.edit`
		delete=`uci get route.route$i.delete`
		dst=`uci get route.route$i.dest_ip`
		mask=`uci get route.route$i.netmask`
		gateway=`uci get route.route$i.gateway`
		enable=`uci get route.route$i.enable`
		gateway_enable=`uci get route.route$i.gateway_enable`
		wan_iface=`uci get route.route$i.wan_iface`
		check_interface $wan_iface
		wan_iface=$wan_iface2
		mask_num=$(/bin/ipcalc.sh $dst $mask | grep PREFIX | sed 's/PREFIX=//g' | tr -d '\n' )

		if [ "$new" = "1" ] ; then
			if [ "$enable" = "1" ] ; then
				if [ "$gateway_enable" = "1" ] ; then
					#if [ "$wan_iface" != "" ] ; then
					#	route add -net $dst netmask $mask gw $gateway dev $wan_iface
					#	print_log "4 route add -net $dst netmask $mask gw $gateway dev $wan_iface"

					#	ip route add $dst/$mask_num via $gateway dev $wan_iface table 1
					#	print_log "4 ip route add $dst/$mask_num via $gateway dev $wan_iface table 1"
					#else
						route add -net $dst netmask $mask gw $gateway
						print_log "5 route add -net $dst netmask $mask gw $gateway"

						ip route add $dst/$mask_num via $gateway table 1
						print_log "5 ip route add $dst/$mask_num via $gateway table 1"
					#fi
				else
					route add -net $dst netmask $mask dev $wan_iface
					print_log "6 route add -net $dst netmask $mask dev $wan_iface"

					ip route add $dst/$mask_num dev $wan_iface table 1
					print_log "6 ip route add $dst/$mask_num dev $wan_iface table 1"
				fi
			fi
			uci set route.route$i.new=0
			uci commit route
		fi
		if [ "$edit" = "1" ] ; then
			oldenable=`uci get route.route$i.enable_old`
			olddst=`uci get route.route$i.dest_ip_old`
		        oldmask=`uci get route.route$i.netmask_old`
		        oldgateway=`uci get route.route$i.gateway_old`
		        OldGatewayEnable=`uci get route.route$i.gateway_enable_old`
		        OldWanIface=`uci get route.route$i.wan_iface_old`
			check_interface $OldWanIface
			OldWanIface=$wan_iface2
			Oldmask_num=$(/bin/ipcalc.sh $olddst $oldmask | grep PREFIX | sed 's/PREFIX=//g' | tr -d '\n' )
				
			if [ "$oldenable" = "1" ] ; then
				if [ "$OldGatewayEnable" = "1" ] ; then
					
					#if [ "$OldWanIface" != "" ] ; then
					#	route del -net $olddst netmask $oldmask gw $oldgateway dev $OldWanIface
					#	print_log "7 route del -net $olddst netmask $oldmask gw $oldgateway dev $OldWanIface"

					#	ip route del $olddst/$Oldmask_num via $oldgateway dev $OldWanIface table 1
					#	print_log "1 ip route del $olddst/$Oldmask_num via $oldgateway dev $OldWanIface table 1"
					#else
						route del -net $olddst netmask $oldmask gw $oldgateway		
						print_log "8 route del -net $olddst netmask $oldmask gw $oldgateway"				

						ip route del $olddst/$Oldmask_num via $oldgateway table 1
						print_log "8 ip route del $olddst/$Oldmask_num via $oldgateway table 1"
					#fi
					
					 
				else
					route del -net $olddst netmask $oldmask dev $OldWanIface
					print_log "9 route del -net $olddst netmask $oldmask dev $OldWanIface"

					ip route del $olddst/$Oldmask_num dev $OldWanIface table 1
					print_log "9 ip route add $olddst/$mask_num dev $OldWanIface table 1"
				fi
			fi

			if [ "$enable" = "1" ] ; then
				if [ "$gateway_enable" = "1" ] ; then
					#if [ "$wan_iface" != "" ] ; then
					#	route add -net $dst netmask $mask gw $gateway dev $wan_iface
					#	print_log "10 route add -net $dst netmask $mask gw $gateway dev $wan_iface"

					#	ip route add $dst/$mask_num via $gateway dev $wan_iface table 1
					#	print_log "10 ip route add $dst/$mask_num via $gateway dev $wan_iface table 1"						
					#else
						route add -net $dst netmask $mask gw $gateway
						print_log "11 route add -net $dst netmask $mask gw $gateway"

						ip route add $dst/$mask_num via $gateway table 1
						print_log "11 ip route add $dst/$mask_num via $gateway table 1"
					#fi			
				else
					route add -net $dst netmask $mask dev $wan_iface
					print_log "12 route add -net $dst netmask $mask dev $wan_iface"	

					ip route add $dst/$mask_num dev $wan_iface table 1
					print_log "12 ip route add $dst/$mask_num dev $wan_iface table 1"
				fi
			fi
			uci set route.route$i.edit=0
			uci commit route
		fi
		if [ "$delete" = "1" ] ; then
			if [ "$enable" = "1" ] ; then
				if [ "$gateway_enable" = "1" ] ; then
					route del -net $dst netmask $mask gw $gateway dev $wan_iface
					#if [ "$wan_iface" != "" ] ; then
					#	route del -net $dst netmask $mask gw $gateway dev $wan_iface
					#	print_log "13 route del -net $dst netmask $mask gw $gateway dev $wan_iface"

					#	ip route del $dst/$mask_num via $gateway dev $wan_iface table 1
					#	print_log "13 ip route del $dst/$mask_num via $gateway dev $wan_iface table 1"	
					#else
						route del -net $dst netmask $mask gw $gateway
						print_log "14 route del -net $dst netmask $mask gw $gateway"

						ip route del $dst/$mask_num via $gateway table 1
						print_log "14 ip route del $dst/$mask_num via $gateway table 1"
					#fi
				else
					route del -net $dst netmask $mask dev $wan_iface
					print_log "15 route del -net $dst netmask $mask dev $wan_iface"

					ip route del $dst/$mask_num dev $wan_iface table 1
					print_log "15 ip route add $dst/$mask_num dev $wan_iface table 1"
				fi				
			fi
			routeid=$i
			uci del route.route$routeid
			while [ $routeid -lt $count ]
			do
				uci rename route.route`expr $routeid + 1`=route$routeid
				routeid=`expr $routeid + 1`
			done
			count=`expr $count - 1`
			i=`expr $i - 1`
			uci set route.general.routes_count=$count
			uci commit route
		fi
		if  [ "$1" == "replug" ] && [ "$enable" = "1" ] ; then

			if [ "$gateway_enable" = "1" ] ; then
				
				#if [ "$wan_iface" != "" ] ; then
				#	route add -net $dst netmask $mask gw $gateway dev $wan_iface
				#	print_log "16 route add -net $dst netmask $mask gw $gateway dev $wan_iface"

				#	ip route add $dst/$mask_num via $gateway dev $wan_iface table 1
				#	print_log "16 ip route add $dst/$mask_num via $gateway dev $wan_iface table 1"	
				#else
					route add -net $dst netmask $mask gw $gateway
					print_log "17 route add -net $dst netmask $mask gw $gateway"

					ip route add $dst/$mask_num via $gateway table 1
					print_log "17 ip route add $dst/$mask_num via $gateway table 1"
				#fi
			
			else
				route add -net $dst netmask $mask dev $wan_iface
				print_log "18 route add -net $dst netmask $mask dev $wan_iface"	

				ip route add $dst/$mask_num dev $wan_iface table 1
				print_log "18 ip route add $dst/$mask_num dev $wan_iface table 1"
			fi
		fi
		
		i=`expr $i + 1`
	done

	local static_routes=$(uci get network.wan$i.staticroutes)
	local msstatic_routes=$(uci get network.wan$i.msstaticroutes)

	for i in "" 1 2 3 4
	do

		local interface=$(uci get network.wan$i.ifname)
		local static_routes=$(uci get network.wan$i.staticroutes)
		#echo "[route] static_routes: $static_routes" >> /tmp/121		

		[ -n "$static_routes" ] && {
			#echo "[route] static_routes: $static_routes" >> /tmp/121
			#uci del network.wan$i.staticroutes
			set_classless_routes $static_routes
		}

		local msstatic_routes=$(uci get network.wan$i.msstaticroutes)

		[ -n "$msstatic_routes" ] && {
			#uci del network.wan$i.msstaticroutes
			set_classless_routes "$msstatic_routes"
		}

	done
}
