#!/bin/sh
. /etc/functions.sh
include /lib/config

dos_enable=$(uci_get firewall general dos_enable)
filter_enable=$(uci_get firewall general filterEnabled)
teardrop_Enabled=$(uci_get firewall general teardropEnabled)
pingEnabled=$(uci_get firewall general pingEnabled)
natenable=$(uci_get nat general nat)
defaultwan=$(uci get network.general.defaultWan)
proto=$(uci_get network $defaultwan proto)
http_port=$(uci_get uhttpd main listen_http)
target=$(uci_get firewall general target)

## For Multi-WAN
if [ "$proto" == "pppoe" ] || [ "$proto" == "pptp" ];then
	WAN="$proto"-"$defaultwan"
else
	WAN=$(uci_get network $defaultwan ifname)
fi

LAN="br+"
#LAN=`uci get network.lan.ifname`
#LOGLIMIT="2/s"
#LOGLIMITBURST="10"

## reset to default setting
echo "5" > /proc/sys/net/ipv4/tcp_syn_retries
echo "128" > /proc/sys/net/ipv4/tcp_max_syn_backlog

insmod x_tables  2>&- >&-
insmod ip_tables  2>&- >&-
insmod ip6_tables  2>&- >&-
        
if [ "$dos_enable" == "1" -o "$filter_enable" == "1" ]; then
	insmod xt_state  2>&- >&-
	insmod iptable_filter  2>&- >&-
	insmod iptable_mangle  2>&- >&-
	insmod ipt_REDIRECT  2>&- >&-
	insmod ipt_REJECT  2>&- >&-
	insmod xt_mac  2>&- >&-
	insmod xt_tcpudp  2>&- >&-
	insmod xt_tcpmss  2>&- >&-
	insmod ipt_LOG  2>&- >&-
	insmod xt_string  2>&- >&-
	insmod ipt_time  2>&- >&-
	insmod xt_limit  2>&- >&-
	insmod xt_pkttype  2>&- >&-
	insmod xt_recent  2>&- >&-
fi

###When DoS enable
if [ "$dos_enable" == "1" ]
then    	
	## ipv4 DoS
	iptables -N DOS_INPUT
	iptables -N DOS_FORWARD
    
	iptables -N SYN_FLOODING
	iptables -N PORT_SCAN
	iptables -N BAD_PING
	iptables -t mangle -N DOS_LAND_ATTACK_LOG
		
	echo "3" > /proc/sys/net/ipv4/tcp_syn_retries
	echo "2048" > /proc/sys/net/ipv4/tcp_max_syn_backlog
	
	## SYN Flooding
	iptables -A DOS_FORWARD -p tcp --dport $http_port --syn -j RETURN
	#iptables -A DOS_FORWARD ! -i $LAN -p tcp --syn -m recent --name forwardflood --update --second 120 --hitcount 10 -j SYN_FLOODING
	#iptables -A DOS_FORWARD ! -i $LAN -p tcp --syn -m recent --name forwardflood --set
	iptables -A DOS_INPUT -p tcp --dport $http_port --syn -j RETURN
	iptables -A DOS_INPUT ! -i $LAN -p tcp --syn -m recent --name inputflood --update --seconds 120 --hitcount 10 -j SYN_FLOODING
	iptables -A DOS_INPUT ! -i $LAN -p tcp --syn -m recent --name inputflood --set
	
	iptables -A SYN_FLOODING -j LOG --log-level ALERT --log-prefix "SYN_FLOODING:"
	iptables -A SYN_FLOODING -j DROP
	
	## IP Spoofing 
	lan_ip=$(uci_get network lan ipaddr)
	#iptables -A DOS_INPUT ! -i $LAN -s ${lan_ip}/24 -j LOG --log-level ALERT --log-prefix "IP Spoofing:"
	#iptables -A DOS_INPUT ! -i $LAN -s ${lan_ip}/24 -j DROP
	
	#iptables -A DOS_FORWARD ! -i $LAN -s ${lan_ip}/24 -j LOG --log-level ALERT --log-prefix "IP Spoofing:"
	#iptables -A DOS_FORWARD ! -i $LAN -s ${lan_ip}/24 -j DROP
	
	## LAND Attack (which is defaultly dropped by kernel in INPUT chain, so that we need to capture it in {REROUTING chain) */
	wan_ip=$(ifconfig $WAN | egrep -o 'inet addr:[0-9.]*' | grep -o "[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}")
	iptables -t mangle -A DOS_LAND_ATTACK_LOG ! -i $LAN -s $wan_ip -d $wan_ip -j LOG --log-level ALERT --log-prefix "LAND Attack:"
	
	## Fraggle Attack 
	iptables -A DOS_INPUT ! -i $LAN -p udp --dport 7 -m limit --limit 1/s -j LOG --log-level ALERT --log-prefix "Fraggle Attack:"
	iptables -A DOS_INPUT ! -i $LAN -p udp --dport 7 -m limit --limit 1/s -j DROP
	
	iptables -A DOS_INPUT ! -i $LAN -p udp --dport 19 -m limit --limit 1/s -j LOG --log-level ALERT --log-prefix "Fraggle Attack:"
	iptables -A DOS_INPUT ! -i $LAN -p udp --dport 19 -m limit --limit 1/s -j DROP
	
	iptables -A DOS_FORWARD ! -i $LAN -p udp --dport 7 -m limit --limit 1/s -j LOG --log-level ALERT --log-prefix "Fraggle Attack:"
	iptables -A DOS_FORWARD ! -i $LAN -p udp --dport 7 -m limit --limit 1/s -j DROP
	
	iptables -A DOS_FORWARD ! -i $LAN -p udp --dport 19 -m limit --limit 1/s -j LOG --log-level ALERT --log-prefix "Fraggle Attack:"
	iptables -A DOS_FORWARD ! -i $LAN -p udp --dport 19 -m limit --limit 1/s -j DROP
	
	## Port Scan 
	iptables -A DOS_INPUT ! -i $LAN -p udp -m state --state NEW -m recent --name port_scan --update --seconds 120 --hitcount 10 -j PORT_SCAN
	iptables -A DOS_INPUT ! -i $LAN -p udp -m recent --name port_scan --set
	iptables -A DOS_FORWARD ! -i $LAN -p udp -m state --state NEW -m recent --name port_scan --update --seconds 120 --hitcount 10 -j PORT_SCAN
	iptables -A DOS_FORWARD ! -i $LAN -p udp -m recent --name port_scan --set
	
	#iptables -A PORT_SCAN ! -i $LAN -p udp -j LOG --log-level ALERT --log-prefix "portscan protect:"
	iptables -A PORT_SCAN ! -i $LAN -p udp -j DROP
	
	iptables -A DOS_FORWARD -p tcp --tcp-flags SYN,ACK,FIN,RST RST -m limit --limit 1/s -j RETURN
	iptables -A DOS_INPUT -p tcp --tcp-flags ALL FIN,URG,PSH -j LOG --log-level ALERT --log-prefix "FportScan:FIN,URG,PSH:"
	iptables -A DOS_INPUT -p tcp --tcp-flags ALL FIN,URG,PSH -j DROP
	
	iptables -A DOS_INPUT -p tcp --tcp-flags ALL ALL -j LOG --log-level ALERT --log-prefix "FportScan:Xmas Tree:"
	iptables -A DOS_INPUT -p tcp --tcp-flags ALL ALL -j DROP
	
	iptables -A DOS_INPUT -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j LOG --log-level ALERT --log-prefix "FportScan:other Xmas Tree:"
	iptables -A DOS_INPUT -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP
	
	iptables -A DOS_INPUT -p tcp --tcp-flags ALL NONE -j LOG --log-level ALERT --log-prefix "FportScan: Null Scan:"
	iptables -A DOS_INPUT -p tcp --tcp-flags ALL NONE -j DROP
	
	iptables -A DOS_INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j LOG --log-level ALERT --log-prefix "FportScan:SYN,RST:"
	iptables -A DOS_INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
	
	iptables -A DOS_INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j LOG --log-level ALERT --log-prefix "FportScan: SYN,FIN:"
	iptables -A DOS_INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP
	
	## Ping Broadcast
	echo "1" > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
	iptables -A DOS_FORWARD -p icmp -m pkttype --pkt-type broadcast  -j LOG --log-level ALERT --log-prefix "Ping Broadcast:"
	iptables -A DOS_FORWARD -p icmp -m pkttype --pkt-type broadcast -j DROP
	
	## Ping of Death 
	iptables -A BAD_PING ! -i $LAN -p icmp --icmp-type echo-request -m limit --limit 1/s -j RETURN
	iptables -A BAD_PING ! -i $LAN -p icmp -j LOG --log-level ALERT --log-prefix "Ping of Death:"
	
	iptables -A BAD_PING ! -i $LAN -p icmp -j DROP
	iptables -A DOS_INPUT ! -i $LAN -p icmp --icmp-type echo-request -j BAD_PING
	iptables -A DOS_FORWARD ! -i $LAN -p icmp --icmp-type echo-request -j BAD_PING
	
	## TearDrop Attack
	if [ "$teardrop_Enabled" == "1" ] ; then   
		iptables -A DOS_INPUT -m state --state INVALID -j LOG --log-level ALERT --log-prefix "Teardrop Attack:"
		iptables -A DOS_FORWARD -m state --state INVALID -j LOG --log-level ALERT --log-prefix "Teardrop Attack:"
		iptables -A DOS_INPUT -m state --state INVALID -j DROP
		iptables -A DOS_FORWARD -m state --state INVALID -j DROP
	fi
fi

## Firewall IP Filter
/lib/firewall/configure_filter_rules

## ICMP Ping
## icmp filter
iptables -N input_icmp
iptables -N forwarding_icmp
 
iptables -A forwarding_icmp -i ath3 -p icmp --icmp-type 8 -j ACCEPT
iptables -A forwarding_icmp -i ath13 -p icmp --icmp-type 8 -j ACCEPT
iptables -A forwarding_icmp ! -i $LAN -p icmp --icmp-type 8 -j DROP

if [ "$target" != "ACCEPT" ] ;then
	iptables -A forwarding_icmp -i $LAN -p icmp --icmp-type 8 -j ACCEPT
fi

if [ "$pingEnabled" == "disable" ] ; then
	#iptables -A forwarding_icmp -p icmp --icmp-type 8 -j DROP
	iptables -A input_icmp -p icmp --icmp-type 8 -j DROP
elif [  "$pingEnabled" == "lan" ] ; then
	#iptables -A forwarding_icmp -i ath3 -p icmp --icmp-type 8 -j ACCEPT
	#iptables -A forwarding_icmp -i ath13 -p icmp --icmp-type 8 -j ACCEPT
	#iptables -A forwarding_icmp ! -i $LAN -p icmp --icmp-type 8 -j DROP
	#iptables -A forwarding_icmp -i $LAN -p icmp --icmp-type 8 -j ACCEPT

	#iptables -A input_icmp -i ath3 -p icmp --icmp-type 8 -j ACCEPT
	#iptables -A input_icmp -i ath13 -p icmp --icmp-type 8 -j ACCEPT
	iptables -A input_icmp ! -i $LAN -p icmp --icmp-type 8 -j DROP
	iptables -A input_icmp -i $LAN -p icmp --icmp-type 8 -j ACCEPT
	[ "$proto" == "pptp" ] && {
		eth_WAN=$(uci_get network $defaultwan ifname)
		iptables -A forwarding_icmp -i $eth_WAN -p icmp --icmp-type 8 -j DROP
		iptables -A input_icmp -i $eth_WAN -p icmp --icmp-type 8 -j DROP
	}
elif [  "$pingEnabled" == "wan" ] ; then
	#iptables -A forwarding_icmp -i ath3 -p icmp --icmp-type 8 -j DROP
	#iptables -A forwarding_icmp -i ath13 -p icmp --icmp-type 8 -j DROP
	#iptables -A forwarding_icmp -i $LAN -p icmp --icmp-type 8 -j DROP
	#iptables -A forwarding_icmp ! -i $LAN -p icmp --icmp-type 8 -j ACCEPT
	#iptables -A input_icmp -i ath3 -p icmp --icmp-type 8 -j DROP
	#iptables -A input_icmp -i ath13 -p icmp --icmp-type 8 -j DROP
	iptables -A input_icmp -i $LAN -p icmp --icmp-type 8 -j DROP
	iptables -A input_icmp ! -i $LAN -p icmp --icmp-type 8 -j ACCEPT
	[ "$proto" == "pptp" ] && {
		eth_WAN=$(uci_get network $defaultwan ifname)
		iptables -A forwarding_icmp -i $eth_WAN -p icmp --icmp-type 8 -j ACCEPT
		iptables -A input_icmp -i $eth_WAN -p icmp --icmp-type 8 -j ACCEPT
	}
elif [  "$pingEnabled" == "both" ] ; then
	#iptables -A forwarding_icmp -p icmp --icmp-type 8 -j ACCEPT
	iptables -A input_icmp -p icmp --icmp-type 8 -j ACCEPT
fi

#guest wireless LAN
#/lib/firewall/firewall_guest_wlan
