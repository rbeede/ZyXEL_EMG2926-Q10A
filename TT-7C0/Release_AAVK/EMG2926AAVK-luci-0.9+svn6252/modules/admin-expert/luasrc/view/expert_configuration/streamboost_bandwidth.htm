<%#

LuCI - Lua Configuration Interface
Copyright 2008 Steven Barth <steven@midlink.org>
Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

$Id: header.htm 4891 2009-06-22 10:23:21Z jow $

-%>
<%
require("luci.http").prepare_content("text/html")
local uci = require("luci.model.uci").cursor()
local i18n = require("luci.i18n")
local lang = uci:get("system","main","language") 
i18n.load("admin-core",lang)
i18n.setlanguage(lang)
-%>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>


<meta http-equiv="Content-Type" content='text/html;charset=utf-8;IE=9'>
<meta http-equiv="Pragma" content="no-cache">

<link href="<%=media%>/css/table.css" rel="stylesheet" type="text/css" />
<link href="<%=media%>/css/expert.css" rel="stylesheet" type="text/css" />

<script type="text/javascript" src="<%=media%>/js/baseJS.js" ></script>
<script language="JavaScript" type="text/javascript"></script>
<style type="text/css"></style>

    <!-- include the prerequisite libraries for the flux kit-->
    <!--[if lt IE 9]><script src="/luci-static/killersteel/html5.js"></script><![endif]-->
	<link type="text/css" href="/css/custom-theme/jquery-ui-1.8.21.custom.css" rel="stylesheet" />

	<script language="javascript" type="text/javascript" src="/js/fxEnvironment.js"></script>
	<script language="javascript" type="text/javascript" src="/js/fxPageMenu.js"></script>	
	
    <!-- include the prerequisite libraries for the flux kit-->
	<script src="/js/excanvas.min.js" type="text/javascript"></script>	 
	<script src="/js/jquery.min.js" type="text/javascript"></script>
	<script src="/js/jquery-ui-1.8.21.custom.min.js" type="text/javascript"></script>
	<script src="/js/jquery.contextMenu.js" type="text/javascript"></script>
	<link href="/css/jquery.contextMenu.css" rel="stylesheet" type="text/css" /> 

	<!-- include flux itself-->	
	<script type="text/javascript" src="/js/fxData.js"></script>
	<script type="text/javascript" src="/js/fxBandwidth.js"></script>
	
<!--<style>
td {white-space: nowrap;}
</style>-->

<script type="text/javascript">

	function isAllNum(str)
	{
		for (var i=0; i<str.length; i++) {
			if ((str.charAt(i) >= '0' && str.charAt(i) <= '9') || (str.charAt(i) == '.' ))
				continue;
			return 0;
		}
		return 1;
	}

	function atoi(str, num)
	{
		i = 1;
		if (num != 1) {
			while (i != num && str.length != 0) {
				if (str.charAt(0) == '.') {
					i++;
				}
				str = str.substring(1);
			}
			if (i != num)
				return -1;
		}
		for (i=0; i<str.length; i++) {
			if (str.charAt(i) == '.') {
				str = str.substring(0, i);
				break;
			}
		}
		if (str.length == 0)
			return -1;
		return parseInt(str, 10);
	}
	
	function enableStreamboostAuto()
	{
		if(document.General.StreamboostAuto.checked)
		{
			document.General.StreamboostUp.disabled = true;		
			document.General.StreamboostDown.disabled = true;
			document.General.testbw.disabled = true;
		}
		else
		{	
			<% enable_auto = uci:get("appflow","tccontroller","enable_auto")
			   if enable_auto == "1" then 
			%>
				document.General.StreamboostUp.disabled = true;		
				document.General.StreamboostDown.disabled = true;
				document.General.testbw.disabled = true;			
			<% else %> 
				document.General.StreamboostUp.disabled = false;		
				document.General.StreamboostDown.disabled = false;
				document.General.testbw.disabled = false;			
			<% end %>		
		}
	
		<% enable_streamboost = uci:get("appflow","tccontroller","enable_streamboost")
		   if enable_streamboost == "0" then 
		%>
				document.General.StreamboostAuto.disabled = true;		
				document.General.StreamboostAutoUpdate.disabled = true;					
		<% end %>	
		
	}	

	function urlSwizzle(url)
	{
		var strReturn = url;

		var strBrowser = navigator.appName;
		var strVersion = navigator.appVersion;

		if($.browser.msie && $.browser.version <= 9)
		{
			strReturn = "/"+url;
		}

			return strReturn;
	}

	function addClick(subItems, x)
	{
		return function(){
							var current = x;
							var items = subItems;
							window.location = urlSwizzle(items[current].pathname);
						 };
	}

	function getSelectedTab()
	{
		var navChildren = $('#navtree').children().children("a");

		var pathname = window.location.pathname;

		for (var i = 0; i < navChildren.length; i++)
		{
			var strName = $(navChildren[i]).text();

			var strReturn = "";
			var parent = $('#navtree').children().children("ul");
			var subItems = $(parent[i]).children().children("a");

			for (var x = 0; x < subItems.length; x++)
			{

				var strItemName = $(subItems[x]).text();

				if(urlSwizzle(subItems[x].pathname) == pathname)
				{
					strReturn = strName;
					break;
				}
			}

			if(strReturn != "")
				break
		}

		return strReturn;
	}

	$(document).ready(function()
	{
		$( "#onoffBWC" ).buttonset();

		$("#enableBWC").click(function()
		{
			alert("enable bwc.");
		});
		$("#disableBWC").click(function()
		{
			alert("disable bwc.");
		});

		//create the page menu system
		var pm = new fxPageMenu("Screen");

		var navChildren = $('#navtree').children().children("a");

		var pathname = window.location.pathname;

		var strSelected = getSelectedTab();

		if(strSelected=="")
		{
			strSelected =   $(navChildren[0]).text();
		}

		for (var i = 0; i < navChildren.length; i++)
		{
			var strName = $(navChildren[i]).text();

			var parent = $('#navtree').children().children("ul");
			var subItems = $(parent[i]).children().children("a");

			//add the my network page
			var hID  = pm.addPage(	strName,    //page label
									strName+"_gray.png",     //normal icon
									strName+"_orange.png",   //hover icon
									strName+"_white.png",    //selected icon
									false,                   //no this is not a tab page
									addClick(subItems,0));


			//get the node to show from the parametrs of your url
			var strNodeID = $.urlParam("nodeid");
			if(strNodeID!=undefined  && strNodeID != "")
			{
				var strIcon = "UnknownDevice.png";
				var strName = "Unknown";

				if(strNodeID == "router")
				{
					strName = "Router";
					strIcon = "Killer.png";
				}
				else
				{

					var pFlows = new fxData("/cgi-bin/ozker/api/flows");
					var pDevices = new fxData("/cgi-bin/ozker/api/nodes");

					//set the mac filter for this node's id
					pFlows.setFilter("mac="+strNodeID);

					//get the nodes
					var data = pDevices.getData();
					var devices = data.nodes;
					var node = null;

					//search and find the node info
					for (item in devices)
					{
						if(devices[item].Pipeline.mac_addr == strNodeID)
						{
							node = devices[item];
							break;
						}
					}

					//try to get the real naem
					if(node.Pipeline.name != undefined && node.Pipeline.name != ""  && node.Pipeline.name != "*")
					{
						strName = node.Pipeline.name;
					}
					else if(node.Pipeline.type != undefined && node.Pipeline.type != "") //if not try to get the device type
					{
						strName = node.Pipeline.type;
					}
					else if(node.Pipeline.ip_addr != undefined && node.Pipeline.ip_addr != "") //if not get the ip
					{
						strName = node.Pipeline.ip_addr;
					}
					else //if not get the mac addr
					{
						strName = node.Pipeline.mac_addr;
					}

					//make our icon
					strIcon = g_strIcons[node.Pipeline.type];

					//if we have an invalid icon index
					if (typeof strIcon == 'undefined' || strIcon == null)
					{
						strIcon = g_strIcons["Unknown"];
					}
				}

				pm.selectNetworkItem(	strIcon,
										strName,
										640,
										480,
										64);
			}
			else if(strName == strSelected)
			{

				pm.addSubmenu(strName,strName);

				var bSelectedItem = false;

				for (var x = 0; x < subItems.length; x++)
				{

					var strItemName = $(subItems[x]).text();

					pm.addSMButton( strName,
									strItemName,
									addClick(subItems,x));

					pm.showSMMenu(strName,true);

					//get the node to show from the parametrs of your url
					var strNode = $.urlParam("nodeid");

					if(urlSwizzle(subItems[x].pathname) == pathname || (pathname == "/cgi-bin/luci" && bSelectedItem == false))
					{
						bSelectedItem = true;
						pm.selectPage(hID,false);
						pm.selectSMTab(strName,strItemName,false);
					}
				}
			}
		};

	});
	
	function verifyReadyData()
	{
	   showWebMessage( 0 , '<%:Message%>' , '<%:Ready%>' );

		<% enable_streamboost = uci:get("appflow","tccontroller","enable_streamboost") 
		   if enable_streamboost == "1" then 
		%>   
				alert("<%:Streamboost_on_warning2%>");
		<% end %>
	}
	
	function btnApply()
	{
	
	   showWebMessage( 2 , '<%:Message%>' , '<%:msg_config%>' );
	   
		var submit_url = '<%=luci.dispatcher.build_url("expert","configuration","management","streamboost","streamboost_bandwidth")%>';
		var loc = submit_url + '?apply=Apply';
		
		with ( document.forms[0] ){

			// streamboost enable start			
			if(StreamboostEnable.checked == true){
				loc += '&StreamboostEnable=' + 1;
			}
			else{
				loc += '&StreamboostEnable=' + 0;
			}
			// streamboost enable end			

			if(StreamboostAuto.checked == true){
				loc += '&StreamboostAuto=' + 1;
			}
			else{
				loc += '&StreamboostAuto=' + 0;
			}
			
			if(StreamboostAutoUpdate.checked == true){
				loc += '&StreamboostAutoUpdate=' + 1;
			}
			else{
				loc += '&StreamboostAutoUpdate=' + 0;
			}
			
			
			Up = atoi(document.General.StreamboostUp.value, 1);
			
			if(isAllNum( document.General.StreamboostUp.value ) == 0){
				alert("<%:StreamboostUp_value_1%>");		
				//alert("The value of Up Limit is invalid value.");
				
				showWebMessage( 0 , '<%:Message%>' , '<%:Ready%>' );				

				document.QoSSetup.UploadBandwidth_value.focus();
				return false;
			}

			if(Up > 1000){
				alert("<%:StreamboostUp_value_2%>");			
				//alert("Up Limit is not to over 1Gbps");
				
				showWebMessage( 0 , '<%:Message%>' , '<%:Ready%>' );
				
				return false;
			}
			
			Down = atoi(document.General.StreamboostDown.value, 1);
			
			if(isAllNum( document.General.StreamboostDown.value ) == 0){
				alert("<%:StreamboostDown_value_1%>");		
				//alert("The value of Down Limit is invalid value.");
				
				showWebMessage( 0 , '<%:Message%>' , '<%:Ready%>' );
				
				return false;
			}

			if(Down > 1000){
				alert("<%:StreamboostDown_value_2%>");			
				//alert("Down Limit is not to over 1Gbps");
				
				showWebMessage( 0 , '<%:Message%>' , '<%:Ready%>' );
				
				return false;
			}			

			loc += '&StreamboostUp=' + StreamboostUp.value;
			loc += '&StreamboostDown=' + StreamboostDown.value;
			
			var code = 'location="' + loc + '"';
			eval(code);
		}
	}
	
</script>

<script type="text/javascript">

var nUciUp;
var nUciDn;

//set the values based on the checkbox state
function doCheckBox()
{
    //if the checkbox is on
    if($("#StreamboostAuto").is(':checked'))
    {
        //get th bw auto test values
        $.getJSON("/cgi-bin/ozker/api/bw_config", function(data)
        {
            var nDL;
            var nUL;

            //if we get valid data
            if( data != undefined &&
                data.bw_config != undefined &&
                $.isNumeric(data.bw_config.up_limit) &&
                $.isNumeric(data.bw_config.down_limit) )
            {
				var nnDnBW = 0;
				var nnUpBW = 0;
				var DnBW = 0;
				var UpBW = 0;			

				nnUpBW = eval(data.bw_config.up_limit * 8.0 / 1000000);//Bytes to Mbps
				nnDnBW = eval(data.bw_config.down_limit * 8.0 / 1000000);
				UpBW = Math.round(nnUpBW * 100)/ 100;
				DnBW = Math.round(nnDnBW * 100)/ 100;		
			
                //convert to
                nDL = DnBW;
                nUL = UpBW;
				
		        //alert("up_limit conver =" + nUL + "down_limit conver =" + nDL );

                //pop the visual fields
                $("#StreamboostUp").val(nUL);
                $("#StreamboostDown").val(nDL);
            }

        });
    }
    else
    {
		
		var nUciUp = "<%= uci:get("appflow","tccontroller","uplimit")%>";		
		var nUciDn = "<%= uci:get("appflow","tccontroller","downlimit")%>";
		
		var nnDnBW = 0;
		var nnUpBW = 0;
		var DnBW = 0;
		var UpBW = 0;			

		nnUpBW = eval(nUciUp * 8.0 / 1000000);//Bytes to Mbps
		nnDnBW = eval(nUciDn * 8.0 / 1000000);
		UpBW = Math.round(nnUpBW * 100)/ 100;
		DnBW = Math.round(nnDnBW * 100)/ 100;			
	
        //pop the uci values back into the controls
        $("#StreamboostUp").val(UpBW);
        $("#StreamboostDown").val(DnBW);
		
    }
}

$(document).ready(function () {
 $("#testbw").click(function(event)
 {
   event.preventDefault();
   bwTest("#StreamboostUp","#StreamboostDown");
 });
 $("#StreamboostAuto").change(function()
 {
    doCheckBox();
 });

 //cache the original uci values
 var nUciUp = "<%= uci:get("appflow","tccontroller","uplimit")%>";		
 var nUciDn = "<%= uci:get("appflow","tccontroller","downlimit")%>";
		
 var nnDnBW = 0;
 var nnUpBW = 0;
 var DnBW = 0;
 var UpBW = 0;			

 nnUpBW = eval(nUciUp * 8.0 / 1000000);//Bytes to Mbps
 nnDnBW = eval(nUciDn * 8.0 / 1000000);
 UpBW = Math.round(nnUpBW * 100)/ 100;
 DnBW = Math.round(nnDnBW * 100)/ 100; 
 
 nUciUp = UpBW;
 nUciDn = DnBW;

 doCheckBox();
});

//get the ul/dl speed and format them for display
function getSpeedField()
{

	document.General.StreamboostUp.disabled = false;		
	document.General.StreamboostDown.disabled = false;
	document.General.testbw.disabled = false;

    var nUL = $("#StreamboostUp").val();
    var nDL = $("#StreamboostDown").val();

    $("#StreamboostUp").val(nUL);
    $("#StreamboostDown").val(nDL);
}

</script>



</head>
<body onload="verifyReadyData(); enableStreamboostAuto()" >
<form method="post" name="General">
<div id="tabs">
  <ul>
	<li class="hightline"><a title="Bandwidth"><span><%:Bandwidth%></span></a></li>
    <li><a href="<%=controller%>/expert/configuration/management/streamboost/streamboost_network" title="Network"><span><%:Network%></span></a></li>
 	<li><a href="<%=controller%>/expert/configuration/management/streamboost/streamboost_priorities" title="Priorities"><span><%:Priorities%></span></a></li>	
 	<li><a href="<%=controller%>/expert/configuration/management/streamboost/streamboost_uptime" title="UpTime"><span><%:Up_Time%></span></a></li>
 	<li><a href="<%=controller%>/expert/configuration/management/streamboost/streamboost_bytes" title="Bytes"><span><%:Byetes%></span></a></li>	
 	<li><a href="<%=controller%>/expert/configuration/management/streamboost/streamboost_allevents" title="AllEvents"><span><%:All_Events%></span></a></li>	
  </ul>
  <br class="clearfloat" />
</div>
<div id="table">
  <ul>
    <li class="table_top"></li>
    <li class="table_content">
      <div class="data">
        <ul>
          <li class="title">
            <table border="0" cellpadding="0" cellspacing="0">
              <tr>
                <td nowrap id="bmTitle"><%:Streamboost%></td>
              </tr>
            </table>
          </li>
          <li class="w_text">
            <table width="95%" border="0" align="center" cellpadding="0" cellspacing="0">
	
			<!--  enable streamboost start-->
			  <ul>
				<% enable_streamboost = uci:get("appflow","tccontroller","enable_streamboost") %>
                  <li class="left_table"><input type="checkbox" name="StreamboostEnable" value=1 <%if enable_streamboost == "1" then%>checked<%end%> >
                  <font><%:Enable_Streamboost%></font><!--&nbsp;&nbsp;
				  <a href="#" title="About StreamBoost" onclick="MM_openBrWindow('<%=controller%>/expert/configuration/management/streamboost/streamboost_about','','width=410,height=165')">(<%:About_Streamboost%>)</a>--></li>
				  <li class="right_table"></li>
              </ul>
			<!-- enable streamboost end -->			
	
              <ul>
				<% enable_auto = uci:get("appflow","tccontroller","enable_auto") %>
                  <li class="left_table"><input type="checkbox" name="StreamboostAuto" id="StreamboostAuto" value=1 <%if enable_auto == "1" then%>checked<%end%> onclick="enableStreamboostAuto()">
                  <font><%:Automatic_Bandwith_Detection%></font>
				  <li class="right_table"></li>				
              </ul>

              <ul>
					<li class="left_table"><%:Up_Limit%></li>
						<li class="right_table">
							<input name="StreamboostUp" id="StreamboostUp" size="12" maxlength="12" value="<%=uplimit%>" type="text" />                        
					</li>					  
              </ul>			  
			  
              <ul>
					<li class="left_table"><%:Down_Limit%></li>						
						<li class="right_table">
							<input name="StreamboostDown" id="StreamboostDown" size="12" maxlength="12" value="<%=downlimit%>" type="text" />
					</li>					  
              </ul>	

              <ul>
					<li class="left_table"><%:Run_Bandwidth_Test%></li>
						<li class="right_table">
						<!-- <input id="testbw" name="testbw" type="button" value="Test Bandwidth"  onClick="bwTest()" /> -->
						<input id="testbw" name="testbw" type="submit" value="Test Bandwidth" class="cbi-button cbi-button-apply btn.primary" />
					</li>
					
					<div style="display: none; font-size:12px;">
						<div id="dialog-bwtest" title="Testing Bandwidth" style="overflow: hidden;">
						<h3> <%:Progress%> </h3>
							<div class="adminline" style="height: 24px;margin-top: 10px;">
								<div class="admincontrol">
								<div id="bwprogress" style="width:465px;height:24px;"></div>
								</div>
							</div>
						</div>
					</div>  					
              </ul>	
				
			  <div class="space"></div>
			  <div><b><%:Automatic_Update_Agreement%></b></div>
			  <div style="height:200px;overflow-y:scroll;margin-bottom:20px;border: 1px solid gray;width:500px;margin-top:8px;">
	            <%:First_Agreement%>
			  <br><br>
				<%:Second_Agreement%>
			  </div>
			  
			  <ul>
				<% auto_update = uci:get("appflow","tccontroller","auto_update") %>
                  <li class="left_table"><input type="checkbox" name="StreamboostAutoUpdate" value=1 <%if auto_update == "1" then%>checked<%end%> >
                  <font><%:Enable_Automatic_Update%></font>
				  <li class="right_table"></li>				
              </ul>
  
            </table>
          </li>
        </ul>
      </div>
	  
      <div class="spaceair"></div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

          <input type="button" id="bmApply" name="apply" value="<%:Apply%>" onClick="btnApply()">&nbsp;
          <input type="reset" id="bmReset" name="Cancel" value="<%:cancel%>">	  

	  <div class="spaceair"></div>  
		  
    </li>
	
  </ul>
</div>
</form>
</body>
<script language="JavaScript">
	showFullPath(' <%:Management%> > <%:Streamboost%> > <%:Bandwidth%> ' );
</script>
</html>
